{
  "variables": {
    "name": "centos-8-openshift-registry-{{isotime \"200601021504\"}}",
    "source_ami": "ami-056b03dba13a2c9dd",
    "access_key": "",
    "secret_key": "",
    "region": "us-east-1",
    "ocp_ver": "4.6.8"
  },
  "builders": [
    {
      "type": "amazon-ebs",
      "access_key": "{{user `access_key`}}",
      "secret_key": "{{user `secret_key`}}",
      "ami_name": "{{user `name`}}",
      "region": "{{user `region`}}",
      "source_ami": "{{user `source_ami`}}",
      "instance_type": "t3.large",
      "communicator": "ssh",
      "ssh_username": "centos",
      "ami_virtualization_type": "hvm",
      "ebs_optimized": true,
      "ena_support": true,
      "sriov_support": true,
      "associate_public_ip_address": "true",
      "vpc_id": "{{user `vpc`}}",
      "subnet_id": "{{user `subnet`}}",
      "launch_block_device_mappings": [{
        "volume_type": "gp2",
        "device_name": "/dev/xvdf",
        "delete_on_termination": true,
        "volume_size": 200
      }],
      "tags": {
        "Name": "{{user `ami_name`}}"
      },
      "run_tags": {
        "Name": "{{user `ami_name`}}"
      },
      "run_volume_tags": {
        "Name": "{{user `ami_name`}}"
      },
      "snapshot_tags": {
        "Name": "{{user `ami_name`}}"
      },
      "ami_description": "Amazon Linux CIS with Cloudwatch Logs agent"
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "scripts/pull-secret.json",
      "destination": "/tmp/pull-secret.json"
    },
    {
      "type": "shell",
      "inline": [
        "sudo dnf -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm"
      ]
    },
    {
      "type": "shell",
      "inline": [
        "sudo dnf install -y ansible"
      ]
    },
    {
      "type": "ansible-local",
      "playbook_file": "ansible/playbook.yaml",
      "role_paths": [
        "ansible/roles/common"
      ],
      "playbook_dir": "ansible",
      "galaxy_file": "ansible/requirements.yaml"
    },
    {
      "type": "shell",
      "inline": [
        "rm .ssh/authorized_keys ; sudo rm /root/.ssh/authorized_keys"
      ]
    }
  ]
}
